<project name="autopatch" default="compile" basedir=".">

<!--
    Tacit Knowledge AutoPatch
-->

    <!-- set our name so the common library can key off of it -->
	<property name="proj.name" value="pool" />
    
	<property file="../build.properties" />
	<property file="./build.properties" />
	<property file="./migration.properties" />

	
    <!-- pull in the common library -->
    <import file="../common.xml" optional="false"/>

    <!-- Construct optional atg compile classpath -->
    <path id="compile.optional.atg.classpath">

      <!-- Add everything in the compile classpath -->
      <path refid="compile.classpath"/>

      <!-- Add the test binary path and test support libraries -->
      <pathelement location="${build.dir}/tests"/>
        
      <!-- pull in support for ATG bindings -->
      <pathelement location="${env.DYNAMO_HOME}/../DAS/lib/das.jar"/>
    </path>
	
    <!-- Construct optional spring compile classpath -->
    <path id="compile.optional.spring.classpath">

      <!-- Add everything in the compile classpath -->
      <path refid="compile.classpath"/>

      <!-- Add the test binary path and test support libraries -->
      <pathelement location="${build.dir}/tests"/>
            
      <!-- pull in support for ATG bindings -->
      <pathelement location="${env.SPRING_HOME}/dist/spring.jar"/>
    </path>
	
	<!-- ========== Compilation Targets ======================================== -->
	
	<target name="init" description="Prepare build directory">
		<attribute name="application.title" default="No title specified."/>
		<sequential>
			<!-- make sure our dependencies are met -->
			<dependencies/>
			
			<!-- see which of our core directories exist -->
			<coredirsexist/>
			
			<mkdir dir="${build.dir}"/>
			<mkdir dir="${distribution.dir}"/>
			<mkdir dir="${classes.dir}"/>
			<mkdir dir="${classes.unittest.dir}"/>
			<mkdir dir="${classes.inttest.dir}"/>
			<mkdir dir="${build.dir}/lib"/>
			<mkdir dir="${build.dir}/liveconfig"/>
			<mkdir dir="${jar.dir}"/>
			<mkdir dir="${report.dir}"/>
			<mkdir dir="${javadoc.dir}"/>
			<mkdir dir="${test.lib.dir}"/>
			<mkdir dir="${build.dir}/optional"/>
			<mkdir dir="${build.dir}/optional/atg"/>
			<mkdir dir="${build.dir}/optional/spring"/>
		</sequential>
	</target>


    
    <!-- Make sure our optional dependencies are met -->
    <target 
        name="optional.dependency" 
        description="makes sure libraries for optional build exist"
        depends="optional.dependency.atg,optional.dependency.spring">
       
    </target>
    
    <target name="optional.dependency.atg" description="makes sure libraries for optional build exist">
        <available file="${env.DYNAMO_HOME}/../DAS/lib/das.jar" property="dynamo.present"/>
        <fail unless="dynamo.present">
            The Dyanmo DAS library is not installed.
          	It should be in ${env.DYNAMO_HOME}/../DAS/lib/das.jar
        </fail>
    </target>
    <target name="optional.dependency.spring" description="makes sure libraries for optional build exist">
            <available file="${env.SPRING_HOME}/dist/spring.jar" property="spring.present"/>
            <fail unless="spring.present">
                The Spring Framework library is not installed.
              	It should be in ${env.SPRING_HOME}/dist/spring.jar
            </fail>
        </target>
    
    <!-- compile optional packages -->
    <target 
        name="compile.optional" 
        depends="compile,optional.dependency" 
        description="Compile the optional bindings">
        <antcall target="compile.optional.atg"/>
        <antcall target="compile.optional.spring"/>
    </target>
    
    <target name="compile.optional.atg" depends="compile,optional.dependency.atg" 
            description="Compile the optional ATG bindings">
            
          <javac srcdir="${optional.home}/atg"
                 destdir="${build.dir}/optional/atg"
                 debug="${compile.debug}"
                 deprecation="${compile.deprecation}"
                 optimize="${compile.optimize}">
            <classpath refid="compile.optional.atg.classpath"/>
          </javac>

          <copy  todir="${build.dir}/optional/atg" filtering="on">
            <fileset dir="${optional.home}/atg" excludes="**/*.java"/>
          </copy>

          <jar jarfile="${build.dir}/${application.name}-optional-atg-${application.title}.jar"
               basedir="${build.dir}/optional/atg">
          </jar>

    </target>
	
    <target name="compile.optional.spring" depends="compile,optional.dependency.spring" 
                description="Compile the optional Spring bindings">
                
              <javac srcdir="${optional.home}/spring"
                     destdir="${build.dir}/optional/spring"
                     debug="${compile.debug}"
                     deprecation="${compile.deprecation}"
                     optimize="${compile.optimize}">
                <classpath refid="compile.optional.spring.classpath"/>
              </javac>

              <copy  todir="${build.dir}/optional/spring" filtering="on">
                <fileset dir="${optional.home}/spring" excludes="**/*.java"/>
              </copy>

              <jar jarfile="${build.dir}/${application.title}-optional-spring.jar"
                   basedir="${build.dir}/optional/spring">
              </jar>

    </target>

    <target name="javadoc.optional" depends="compile.optional">
        <antcall target="javadoc.optional.atg"/>
        <antcall target="javadoc.optional.spring"/>
    </target>
    <target name="javadoc.optional.atg" depends="compile.optional.atg"
     description="Create optional application Javadoc documentation">
      <mkdir      dir="${dist.home}"/>
      <mkdir      dir="${dist.home}/docs"/>
      <mkdir      dir="${dist.home}/docs/api"/>
      <mkdir      dir="${dist.home}/docs/optional-api/"/>
        <mkdir      dir="${dist.home}/docs/optional-api/atg"/>
      <javadoc sourcepath="${optional.home}/atg"
                  destdir="${dist.home}/docs/optional-api/atg"
             packagenames="${component.package}.*"
                   author="true"
                  version="true"
                  private="false"
                 doctitle="&lt;h1&gt;${component.title} - Optional - ATG - (Version ${component.version})&lt;/h1&gt;"
              windowtitle="${component.title} (Version ${component.version})"
                   bottom="Copyright (c) 2006 - Tacit Knowledge LLC">
        <classpath refid="compile.optional.atg.classpath"/>
      </javadoc>
    </target>
	
	<target name="javadoc.optional.spring" depends="compile.optional.spring"
		description="Create optional application Javadoc documentation">
		<mkdir      dir="${dist.home}"/>
		<mkdir      dir="${dist.home}/docs"/>
		<mkdir      dir="${dist.home}/docs/api"/>
		<mkdir      dir="${dist.home}/docs/optional-api/"/>
		<mkdir      dir="${dist.home}/docs/optional-api/spring"/>
		<javadoc sourcepath="${optional.home}/spring"
			destdir="${dist.home}/docs/optional-api/spring"
			packagenames="${component.package}.*"
			author="true"
			version="true"
			private="false"
			doctitle="&lt;h1&gt;${component.title} - Optional - Spring - (Version ${component.version})&lt;/h1&gt;"
			windowtitle="${component.title} (Version ${component.version})"
			bottom="Copyright (c) 2006 - Tacit Knowledge LLC">
			<classpath refid="compile.optional.spring.classpath"/>
		</javadoc>
	</target>

  <target name="dist" depends="clean,compile,compile.optional,test,javadoc,javadoc.optional" description="Create binary distribution">
    <mkdir      dir="${distribution.dir}"/>
    <copy file="${build.dir}/${application.title}.jar"
          toDir="${distribution.dir}"/>
    <copy file="${build.dir}/${application.title}-optional-atg.jar"
              toDir="${distribution.dir}"/>
    <copy file="${build.dir}/${application.title}-optional-spring.jar"
                toDir="${distribution.dir}"/>
    <mkdir      dir="${distribution.dir}/src"/>
    <copy     todir="${distribution.dir}/src" filtering="on">
      <fileset  dir="${basedir}/src"/>
    </copy>
    <mkdir      dir="${lib.dir}"/>
    <copy todir="${distribution.dir}">
      <fileset  dir="${app.lib.dir}"/>
    </copy>
    <copy todir="${distribution.dir}/docs" file="${basedir}/README"/>
    <copy todir="${distribution.dir}/docs" file="${basedir}/migration.properties"/>
    <jar jarfile="${build.dir}/${application.title}-src.jar"
         basedir="${distribution.dir}">
    </jar>
    <move file="${build.dir}/${application.title}-src.jar"
          todir="${distribution.dir}"/>
  </target>





</project>
